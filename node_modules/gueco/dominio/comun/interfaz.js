/*! \package dominio.comun
 */

/*! interfaz
 * \class interfaz
 */
function interfaz (nombre, metodos) {
    if (arguments.length != 2)
        throw new Error('interfaz -> ' + arguments.length +
                        '; se esperaba 2.')

    this.nombre = nombre
    this.metodos = []

    for (var i = 0, l = metodos.length; i < l; i++) {
        if (typeof metodos[i] !== 'string')
            throw new Error('interfaz -> nombres de metodos := <string>')
        this.metodos.push(metodos[i])
    }
}

interfaz.asegurar_implementacion = function(objeto) {
    if (arguments.length < 2)
        throw new Error('interfaz.asegurar_implementacion -> ' +
                        arguments.length + '; se esperaba al menos 2.')

    for (var i = 1, l = arguments.length; i < l; i++) {
        var interface = arguments[i]

        if (interface.constructor !== interfaz)
            throw new Error('interfaz.asegurar_implementacion -> '+
                            'se esperaba que argumento >2 sea interfaz.')

        for (var j = 0, m = interface.metodos.length; j < m; j++) {
            var metodo = interface.metodos[j];
            if (!objeto[metodo] || typeof objeto[metodo] !== 'function')
                throw new Error('interfaz.asegurar_implementacion -> ' +
                                '|objeto| no implementa ' +
                                interface.nombre + '::' + metodo)
        }
    }
}

module.exports = interfaz
