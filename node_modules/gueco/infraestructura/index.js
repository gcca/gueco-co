// interfaz
var controlador_aplicacion =
    require('gueco/interfaz/controlador/aplicacion')
var controlador_recurso =
    require('gueco/interfaz/controlador/recurso')
var controlador_usuario =
    require('gueco/interfaz/controlador/usuario')
var controlador_gueco =
    require('gueco/interfaz/controlador/gueco')

var fachada_servicio_usuario =
    require('gueco/interfaz/usuario/fachada/interno/servicio_usuario')
var fachada_servicio_recurso =
    require('gueco/interfaz/recurso/fachada/interno/servicio_recurso')

// aplicaci√≥n

// dominio
var repositorio_usuario =
    require('gueco/infraestructura/persistencia/mongoskin/repositorio_usuario')
var repositorio_escenario =
    require('gueco/infraestructura/persistencia/mongoskin/repositorio_escenario')
var servicio_usuario =
    require('gueco/dominio/servicio/usuario')


var especificador_escenarios =
    require('gueco/infraestructura/persistencia/mongoskin/especificador_escenarios')

ctx_controlador = {
    aplicacion: function() {
        var controlador_aplicacion_ref =
            new controlador_aplicacion
        var fachada_servicio_usuario_ref =
            new fachada_servicio_usuario
        var servicio_usuario_ref =
            new servicio_usuario
        var repositorio_usuario_ref =
            new repositorio_usuario

        controlador_aplicacion_ref.fachada_servicio_usuario =
            fachada_servicio_usuario_ref
        fachada_servicio_usuario_ref.servicio_usuario =
            servicio_usuario_ref
        servicio_usuario_ref.repositorio_usuario =
            repositorio_usuario_ref

        return controlador_aplicacion_ref
    },
    aplicacion$: controlador_aplicacion.prototype,

    escenario: function() {
        var controlador_recurso_ref =
            new controlador_recurso
        var fachada_servicio_recurso_ref =
            new fachada_servicio_recurso
        var repositorio_escenario_ref =
            new repositorio_escenario

        fachada_servicio_recurso_ref.repositorio =
            repositorio_escenario_ref
        controlador_recurso_ref.fachada_servicio_recurso =
            fachada_servicio_recurso_ref

        return controlador_recurso_ref
    },
    escenario$: controlador_recurso.prototype,

    usuario: function() {
        var controlador_usuario_ref =
            new controlador_usuario
        var fachada_servicio_usuario_ref =
            new fachada_servicio_usuario
        var servicio_usuario_ref =
            new servicio_usuario
        var especificador_escenarios_ref =
            new especificador_escenarios
        var repositorio_usuario_ref =
            new repositorio_usuario
        var repositorio_escenario_ref =
            new repositorio_escenario

        servicio_usuario_ref.repositorio_usuario =
            repositorio_usuario_ref
        servicio_usuario_ref.repositorio_escenario =
            repositorio_escenario_ref
        servicio_usuario_ref.especificador_escenarios =
            especificador_escenarios_ref
        fachada_servicio_usuario_ref.repositorio_escenario =
            repositorio_escenario_ref
        fachada_servicio_usuario_ref.servicio_usuario =
            servicio_usuario_ref
        controlador_usuario_ref.fachada_servicio_usuario =
            fachada_servicio_usuario_ref

        return controlador_usuario_ref
    },
    usuario$: controlador_usuario.prototype,

    gueco: function() {
        var controlador_gueco_ref = new controlador_gueco

        return controlador_gueco_ref
    },
    gueco$: controlador_gueco.prototype
}

ctx_interfaz = {
    usuario: {
        servicio_usuario: function() {}
    },

    controlador: ctx_controlador,
    c: ctx_controlador
}

module.exports = {
    interfaz: ctx_interfaz,
    i: ctx_interfaz
}
