/*! \package infraestructura.persistencia.mongo
 */

var repositorio = require(
    'gueco/infraestructura/persistencia/mongoskin/repositorio')

repositorio_usuario.prototype = new repositorio
repositorio_usuario.prototype.constructor =
    repositorio_usuario

repositorio_usuario.prototype.coleccion = 'usuario'

repositorio_usuario.prototype.buscar = function(especificador,
                                                retrollamada) {
    repositorio.mongo.collection(this.coleccion).find(
        especificador.especifica).toArray(function(error, usuarios) {

        if (error) retrollamada(error, null)
        else {
            var lon = usuarios.length - 1
            for (var i in usuarios) {
                var usuario = usuarios[i]
                repositorio.mongo.collection('escenario').find({
                    _id: { $in:
                        usuario.escenarios.map(function(j) {
                            return repositorio.mongo.toId(j) })
                    }
                }).toArray(function (error2, escenarios) {
                    if (error2) retrollamada(error2, null)
                    else {
                        usuarios[i].escenarios = escenarios

                        if (lon == i) {
                            retrollamada(error2, usuarios)
                        }
                    }
                })
            }
        }
    })
}

/*repositorio_usuario.prototype.almacenar = function(usuario,
                                                   retrollamada) {
    repositorio.mongo.coleccion(this.coleccion).save()
}*/

function repositorio_usuario () {}

module.exports = repositorio_usuario
